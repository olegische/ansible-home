---
# file: ansible-home/roles/common/tasks/users.yml

- name: Generate '{{ item.username }}' user password
  shell: openssl rand -base64 48
  register: user_passwd_reg

  set_fact:
- name: Set '{{ item.username }}' user password variable
    user_passwd: "{{ user_passwd_reg.stdout }}"
    cacheable: no
  when: user_passwd_reg is succeeded
  register: password_fact_set
    
- name: Add user '{{ item.username }}'
  user:
    name: "{{ item.username }}"
    comment: "{{ item.gecos }}"
    shell: "{{ item.shell }}"
    create_home: yes
    password: "{{ user_passwd | password_hash('sha512') }}"
    update_password: on_create
  when: password_fact_set is succeeded

- name: Update remote ansible user password and add auth keys
  block:
  - name: Update '{{ item.username }}' user password
    user:
      name: "{{ item.username }}"
      password: "{{ user_passwd | password_hash('sha512') }}"
      update_password: always

  - name: Set authorized keys for remote ansible user
    authorized_key:
      user: "{{ item.username }}"
      state: present
      key: "{{ lookup('file', '/home/{{ item.username }}/.ssh/id_rsa.pub', errors='ignore') }}"
    ignore_errors: yes
# END Update remote ansible user password and add auth keys
  when: item.username == 'ansible'
  tags:
    - ansible

- name: Save client ansible password block
  block:
  - name: Set '{{ item.username }}' user password file variable
    set_fact:
      user_passwd_path: "/etc/ansible/.passwd/{{ item.username }}.{{ inventory_hostname }}.yml"
      cacheable: no

  - name: Save remote '{{ item.username }}' user password
    copy:
      dest: "{{ user_passwd_path }}"
      content: |
        ---
        # file: {{ user_passwd_path }}
        ansible_become_pass: {{ user_passwd }}

  - name: Encrypt local '{{ item.username }}' user password file
    command: "ansible-vault encrypt {{ user_passwd_path }}"
    when: inventory_hostname == 'localhost'

  - name: Encrypt remote '{{ item.username }}' user password file
    command: "ansible-vault encrypt {{ user_passwd_path }} --vault-id {{ vault_id_labels[0] }}@/home/ansible/.vault_pass/{{ vault_id_labels[0] }}_pass"
    when: inventory_hostname != 'localhost'

  - name: Set permission to '{{ item.username }}' user password file
    file:
      path: "{{ user_passwd_path }}"
      owner: "{{ item.username }}"
      group: "{{ item.username }}"
      mode: 0400
# END Save client ansible password block
  when: item.username == 'ansible'
  delegate_to: localhost
  tags:
    - ansible